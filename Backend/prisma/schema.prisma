// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum EmailStatus {
  SENT
  NOT_SENT
  PENDING
  PROCESSING
  FAILED
}

model User {
  id           Int      @id @default(autoincrement())
  name         String
  email        String   @unique
  password     String
  role         Role     @default(user)
  profileImage String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  project      Project? // One-to-one relation with Project
}

model Project {
  id          Int         @id @default(autoincrement())
  title       String
  name        String? // Add this if you're using project.name in your code
  description String
  status      Status      @default(pending)
  endDate     DateTime?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  assignedTo  User?       @relation(fields: [userId], references: [id])
  userId      Int?        @unique
  emailStatus EmailStatus @default(NOT_SENT) // âž• Add this line
}

enum Role {
  admin
  user
}

enum Status {
  pending
  in_progress
  completed
}

model EmailQueue {
  id          String      @id @default(uuid())
  to          String
  subject     String
  template    String
  context     String      @db.Text
  status      EmailStatus @default(PENDING)
  error       String?     @db.Text
  createdAt   DateTime    @default(now()) @map("created_at")
  processedAt DateTime?   @map("processed_at")
  retries     Int         @default(0)

  @@map("email_queue")
}
